version: '3.8'

services:
  # Redis for Celery message broker and caching
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped

  # PostgreSQL for analytics and tracking data
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: backlink_indexer
      POSTGRES_USER: indexer
      POSTGRES_PASSWORD: secure_password_123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped

  # Main application
  app:
    build: .
    ports:
      - "5000:5000"
    environment:
      - DATABASE_URL=postgresql://indexer:secure_password_123@postgres:5432/backlink_indexer
      - REDIS_URL=redis://redis:6379/0
      - SESSION_SECRET=your_secret_key_here
      - FLASK_ENV=production
      - CHROME_DRIVER_MODE=headless
    depends_on:
      - postgres
      - redis
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
    restart: unless-stopped

  # Celery worker for background tasks
  celery-worker:
    build: .
    command: celery -A backlink_indexer.queue.celery_queue.celery_app worker --loglevel=info
    environment:
      - DATABASE_URL=postgresql://indexer:secure_password_123@postgres:5432/backlink_indexer
      - REDIS_URL=redis://redis:6379/0
      - CHROME_DRIVER_MODE=headless
    depends_on:
      - postgres
      - redis
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
    restart: unless-stopped

  # Celery beat for scheduled tasks
  celery-beat:
    build: .
    command: celery -A backlink_indexer.queue.celery_queue.celery_app beat --loglevel=info
    environment:
      - DATABASE_URL=postgresql://indexer:secure_password_123@postgres:5432/backlink_indexer
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - postgres
      - redis
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
    restart: unless-stopped

  # Flower for Celery monitoring
  flower:
    build: .
    command: celery -A backlink_indexer.queue.celery_queue.celery_app flower --port=5555
    ports:
      - "5555:5555"
    environment:
      - DATABASE_URL=postgresql://indexer:secure_password_123@postgres:5432/backlink_indexer
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - postgres
      - redis
    restart: unless-stopped

  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    restart: unless-stopped

  # Grafana for metrics visualization
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/datasources:/etc/grafana/provisioning/datasources
    depends_on:
      - prometheus
    restart: unless-stopped

volumes:
  redis_data:
  postgres_data:
  prometheus_data:
  grafana_data:

networks:
  default:
    name: backlink_indexer_network